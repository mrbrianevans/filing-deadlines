import type {CellConfig} from 'jspdf'
import type {RecentFilings, RecentFilingsItem} from "../../../../fs-shared/RecentFilings.js";
import Inter from '../../assets/fonts/inter/static/Inter-Regular.ttf?raw'
import { user } from '../stores/user.js';
import {sentenceCase} from "sentence-case";

export async function exportRecentFilingsPdf(recentFilings: RecentFilings, startDate: string, endDate: string, requestedBy: string){

  // requires node polyfills in the browser to use pdfjs
  // {
  //   const pdfjs = await import('pdfjs')
  //   const Helvetica = await import('pdfjs/font/Helvetica')
  //   const doc = new pdfjs.Document({font: Helvetica, padding: 25 * pdfjs.mm})
  //
  //   doc.text("Hello Filing Deadlines!")
  //
  //   const buffer = await doc.asBuffer()
  //   return new Blob([buffer], {type: 'pdf'})
  // }

  {
    // generates a pdf with a new page for each group of recent filings (eg filing type) and a table for the filings.
    const {jsPDF} = await import('jspdf')
    const Temporal = await import('@js-temporal/polyfill').then(m=>m.Temporal)
    const doc = new jsPDF({orientation:'landscape'})
    doc.setDocumentProperties({author: 'Filing deadlines'})
    // doc.addFileToVFS("Inter-Regular.ttf", Inter);
    // doc.addFont("Inter-Regular.ttf", "Inter", "normal");
    // doc.setFont("Inter");
    const dateRange = `${Temporal.PlainDate.from(startDate).toLocaleString()} to ${Temporal.PlainDate.from(endDate).toLocaleString()}`
    doc.setFontSize(20)
    doc.text(`Recent filings`, 10, 10)
    doc.setFontSize(10)
    doc.text(dateRange, 10, 20)

    const columns: CellConfig[] = [
      {name: 'companyNumber', prompt: 'Company number', align: 'left', padding: 3, width: 40},
      {name: 'companyName', prompt: 'Name', align: 'left', padding: 3, width: 80},
      {name: 'filingDate', prompt: 'Date', align: 'left', padding: 3, width: 40},
      {name: 'description', prompt: 'Filing description', align: 'left', padding: 3, width: 190}
    ]
    let offset = 30
    const groups =  [...new Set(recentFilings.map(f=>f.filingType))]
    for(const group of groups){
      doc.setFontSize(16)
      doc.text(sentenceCase(group), 10, offset, {})
      doc.setFontSize(12)
      const rows = recentFilings.filter(f=>f.filingType===group).map(({subcategory, description, ...f})=>({...f, description: description.replaceAll(/\*\*/g, '')}))
      doc.table(10, offset+3, rows, columns, {autoSize: false})
      offset = 10
      doc.addPage()
    }
    const footer = `
    This document was generated by Filing Deadlines (https://filingdeadlines.co.uk) with data from Companies House.
    Requested by ${requestedBy} on ${new Date().toString()}.
    `
    doc.text(footer, 10, offset, {})
    return doc.output('blob')
  }
}
