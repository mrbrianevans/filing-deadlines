version: '3.9'
# this docker compose is for building all the images during development. This was the previous way of running the project.
services:
  caddy:
    build: caddy
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
      - "3002:3002"
    volumes:
      - client_dist:/client
      - caddy_data:/data
      - caddy_config:/config
    environment:
      SERVER_PORT: 3000
    env_file:
      - .url.env
    logging:
      driver: local
  redis:
    build: redis
    volumes:
      - redisdata:/data
    logging:
      driver: local
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 200M
  client:
    build:
      dockerfile: Client.Dockerfile
    volumes:
      - client_dist:/filing-deadlines/client/dist # this MUST match the workdir set in the Dockerfile
    deploy:
      resources:
        limits:
          cpus: '0.80'
          memory: 1000M # vite uses loads of memory to build
  worker:
    build:
      dockerfile: Worker.Dockerfile
    environment:
      REDIS_URL: redis://redis:6379
      LOKI_URL: "http://loki:3100"
    env_file:
      - .api.env
    logging:
      driver: local
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 250M
  server:
    build:
      dockerfile: Server.Dockerfile
    environment:
      REDIS_URL: redis://redis:6379
      PORT: 3000
      LOKI_URL: "http://loki:3100"
    env_file:
      - .api.env
      - .xero.env
      - .server.env
      - .url.env
    logging:
      driver: local
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 350M
  "metrics":
    "build": "monitoring/prometheus"
    logging:
      driver: local
    "environment":
      "CADDY_METRICS_URL": "http://caddy:2022"
    "volumes":
      - "prom_data:/prometheus"
  "loki":
    "build": "monitoring/loki"
    logging:
      driver: local
    "volumes":
      - "loki_data:/loki"
  "grafana":
    "build": "monitoring/grafana"
    logging:
      driver: local
    "volumes":
      - "grafana_data:/var/lib/grafana"
      - "/var/log/grafana"
    "environment":
      LOKI_URL: "http://loki:3100"
      METRICS_URL: "http://metrics:9090"
  repl:
    build:
      dockerfile: Repl.Dockerfile
    depends_on:
      - redis
    "environment":
      REDIS_URL: redis://redis:6379
      LOKI_URL: "http://loki:3100"
    tty: true
    stdin_open: true
  backend:
    image: registry.digitalocean.com/fdcr/filing-deadlines/backend
    command: node index.js
    working_dir: /filing-deadlines/repl
    "environment":
      REDIS_URL: redis://redis:6379
      LOKI_URL: "http://loki:3100"
    tty: true
    stdin_open: true
volumes:
  redisdata:
  caddy_data:
  caddy_config:
  client_dist:
  grafana_data:
  loki_data:
  prom_data:
